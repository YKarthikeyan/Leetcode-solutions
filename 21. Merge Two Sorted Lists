# Definition for singly-linked list.
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
        
class Solution:
    def insertNode(self, root, val):
            temp = ListNode(val)
            if not root:
                root = temp
            else:
                current = root
                while current.next:
                    current = current.next
                current.next = temp
            return root
        
    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:
        l3 = ListNode()
        while l1 and l2:
            if l1.val <= l2.val:
                self.insertNode(l3, l1.val)
                l1 = l1.next
            else:
                self.insertNode(l3, l2.val)
                l2 = l2.next
        if l1:
            while l1:
                self.insertNode(l3, l1.val)
                l1 = l1.next
        elif l2:
            while l2:
                self.insertNode(l3, l2.val)
                l2 = l2.next        
        
        return l3.next      
